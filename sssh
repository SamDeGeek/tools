#!/bin/sh

# Name: sssh*
# Author: sam.k.tan@oracle.com

# save the input parameters
PARAMS="$*"

# get the paths to the executables
SSH=$(which ssh)
SSHKEYGEN=$(which ssh-keygen)
SSSH="::::"

# print a banner message
echo "${SSSH} Sam's SSH Wrapper by sam.k.tan@oracle.com"

# run SSH with the given parameters
${SSH} ${PARAMS}

# if SSH exits with status code other than 255 ...
[ $? -ne 255 ] && exit $?

# extract the hostname from the SSH parameters
HOST=$(${SSH} -G ${PARAMS} | grep -i '^hostname' | cut -d ' '  -f2)

# check if hostname exists in known_hosts file
${SSHKEYGEN} -F ${HOST} > /dev/null 2>&1

# if hostname does not exist, then exit
[ $? -ne 0 ] && exit 255

# since hostname exists, ask to delete and try again
echo "${SSSH} Matching hostname found in known_hosts file."
echo "${SSSH} Do you want to remove the offending host key(s) and retry the connection?"
echo "${SSSH} Only YES is accepted, any other key to cancel."
read RESPONSE

# if user entered anything other than YES
<<<<<<< HEAD
[ "x${RESPONSE}x" != "xYESx" ] && return 255
=======
[ "x${RESPONSE}x" != "xYESx" ] && exit 255
>>>>>>> 7d32155251d07b4d04f6efe76dd97a80f0f74a31

# remove the existing host keys
echo "${SSSH} Removing offending keys ..."
${SSHKEYGEN} -R ${HOST}

# retry the SSH command with the given parameters
echo "${SSSH} Retrying SSH ..."
${SSH} ${PARAMS}

